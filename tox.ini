[tox]
minversion = 1.6
envlist = py34,py27,pep8
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
deps = -r{toxinidir}/test-requirements.txt
commands = ostestr --slowest {posargs}
whitelist_externals = bash
passenv = *_proxy *_PROXY

[testenv:releasenotes]
# NOTE(jaegerandi): this target does not use constraints because
# upstream infra does not yet support it. Once that's fixed, we can
# drop the install_command.
install_command = pip install -U --force-reinstall {opts} {packages}
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:debug-py27]
basepython = python2.7
commands = oslo_debug_helper {posargs}

[testenv:debug-py34]
basepython = python3.4
commands = oslo_debug_helper {posargs}

[testenv:py34]
commands =
  lockutils-wrapper python setup.py testr --slowest --testr-args='glance.tests.unit'
  python -m testtools.run \
    glance.tests.functional.db.test_simple \
    glance.tests.functional.test_client_exceptions \
    glance.tests.functional.v1.test_multiprocessing

[testenv:pep8]
commands =
  flake8 {posargs}
  # Run security linter
  bandit -c bandit.yaml -r glance -n5 -p gate
  # Check that .po and .pot files are valid:
  bash -c "find glance -type f -regex '.*\.pot?' -print0|xargs -0 -n 1 msgfmt --check-format -o /dev/null"

[testenv:cover]
# NOTE(jaegerandi): this target does not use constraints because
# upstream infra does not yet support it. Once that's fixed, we can
# drop the install_command.
install_command = pip install -U --force-reinstall {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
commands = python setup.py testr --coverage --testr-args='^(?!.*test.*coverage).*$'

[testenv:venv]
# NOTE(jaegerandi): this target does not use constraints because
# upstream infra does not yet support it. Once that's fixed, we can
# drop the install_command.
install_command = pip install -U --force-reinstall {opts} {packages}
commands = {posargs}

[testenv:genconfig]
commands =
  oslo-config-generator --config-file etc/oslo-config-generator/glance-api.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-registry.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-scrubber.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-cache.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-manage.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-glare.conf

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:api-ref]
# This environment is called from CI scripts to test and publish
# the API Ref to developer.openstack.org.
#
# NOTE(sdague): this target does not use constraints because
# upstream infra does not yet support it. Once that's fixed, we can
# drop the install_command.
whitelist_externals = bash
                      rm
install_command = pip install -U --force-reinstall {opts} {packages}
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:bandit]
commands = bandit -c bandit.yaml -r glance -n5 -p gate

[flake8]
# TODO(dmllr): Analyze or fix the warnings blacklisted below
# E711  comparison to None should be 'if cond is not None:'
# E712  comparison to True should be 'if cond is True:' or 'if cond:'
# H404  multi line docstring should start with a summary
# H405  multi line docstring summary not separated with an empty line
ignore = E711,E712,H404,H405
exclude = .venv,.git,.tox,dist,doc,etc,*glance/locale*,*lib/python*,*egg,build

[hacking]
local-check-factory = glance.hacking.checks.factory
import_exceptions = glance.i18n

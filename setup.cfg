[metadata]
name = subject
summary = OpenStack Subject Service
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/subject/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[files]
packages =
    subject

[entry_points]
console_scripts =
    subject-api = subject.cmd.api:main
    subject-cache-prefetcher = subject.cmd.cache_prefetcher:main
    subject-cache-pruner = subject.cmd.cache_pruner:main
    subject-cache-manage = subject.cmd.cache_manage:main
    subject-cache-cleaner = subject.cmd.cache_cleaner:main
    subject-control = subject.cmd.control:main
    subject-manage = subject.cmd.manage:main
    subject-registry = subject.cmd.registry:main
    subject-replicator = subject.cmd.replicator:main
    subject-scrubber = subject.cmd.scrubber:main
    subject-glare = subject.cmd.glare:main
subject.common.subject_location_strategy.modules =
    location_order_strategy = subject.common.location_strategy.location_order
    store_type_strategy = subject.common.location_strategy.store_type
oslo.config.opts =
    subject.api = subject.opts:list_api_opts
    subject.registry = subject.opts:list_registry_opts
    subject.scrubber = subject.opts:list_scrubber_opts
    subject.cache= subject.opts:list_cache_opts
    subject.manage = subject.opts:list_manage_opts
    subject.glare = subject.opts:list_artifacts_opts
oslo.config.opts.defaults =
    subject.api = subject.common.config:set_cors_middleware_defaults
subject.database.migration_backend =
    sqlalchemy = oslo_db.sqlalchemy.migration
subject.database.metadata_backend =
    sqlalchemy = subject.db.sqlalchemy.metadata
subject.artifacts.types =
    MyArtifact = subject.contrib.plugins.artifacts_sample:MY_ARTIFACT

subject.flows =
    import = subject.async.flows.base_import:get_flow

subject.flows.import =
    convert = subject.async.flows.convert:get_flow
    introspect = subject.async.flows.introspect:get_flow
    ovf_process = subject.async.flows.ovf_process:get_flow

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[egg_info]
tag_build =
tag_date = 0
tag_svn_revision = 0

[compile_catalog]
directory = subject/locale
domain = subject

[update_catalog]
domain = subject
output_dir = subject/locale
input_file = subject/locale/subject.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = subject/locale/subject.pot

[pbr]
autodoc_tree_index_modules = True